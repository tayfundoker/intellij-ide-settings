<templateSet group="OyunStudyosu">
  <template name="log" value="logger.debug();" description="Logs something to console." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="addDispatcher" value="@Autowired&#10;  protected ApplicationEventPublisher dispatcher;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="foreach" value="for ($ELEMENT_TYPE$ $VAR$ : $ITERABLE_TYPE$) {&#10;    $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ELEMENT_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="addLogger" value="@Autowired&#10;  protected Logger logger;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="addContext" value="@Autowired &#10;  private ApplicationContext context;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="injectProperty" value="@Value(&quot;${$NAME$}&quot;)&#10;private $ELEMENT_TYPE$ $VAR$;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ELEMENT_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="addConfig" value="@RestController&#10;public class $ELEMENT_TYPE$ extends $ELEMENT_TYPE${}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="ELEMENT_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="logjs" value="console.log($END$);" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="byteBool" value="public boolean get$NAME$()&#10;  {&#10;    return $NAME$ == 1;&#10;  }&#10;&#10;  public void set$NAME$(boolean $NAME$)&#10;  {&#10;    this.$NAME$ = $NAME$ ? (byte) 1 : 0;&#10;  }" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getReqData" value="$TYPE$ vo = model.getRequestData($TYPE$.class);" description="Get request data from model by type." toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="serviceConfig" value="import com.oyunstudyosu.eros.core.annotations.AddRequestFilter;&#10;import com.oyunstudyosu.eros.core.annotations.AddRequestProcess;&#10;import com.oyunstudyosu.eros.core.annotations.ResponseData;&#10;import com.oyunstudyosu.eros.core.annotations.ServiceMapping;&#10;import com.oyunstudyosu.eros.core.enums.ServiceType;&#10;import com.oyunstudyosu.eros.modules.account.controller.avatarList.process.GetAvatarListProcess;&#10;import com.oyunstudyosu.eros.modules.account.controller.avatarList.vo.AvatarListResponseVo;&#10;import com.oyunstudyosu.eros.modules.account.filter.AccountFilterIsAuthenticated;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;import org.springframework.web.bind.annotation.RequestMethod;&#10;import org.springframework.web.bind.annotation.RequestBody;&#10;&#10;public class $CLASS_NAME$&#10;{&#10;  @RequestMapping(value = &quot;/enter-url&quot;, method = RequestMethod.POST)&#10;  @ServiceMapping(name = &quot;enter-url&quot;,typeList = {ServiceType.Web})&#10;  @ResponseData(type = ResponseVo.class)&#10;  @AddRequestFilter(type = AccountFilterIsAuthenticated.class)&#10;  @AddRequestProcess(type = Process.class)&#10;  @AddResponseFilter(name = &quot;enterFilterName&quot;, fields = &quot;enter,field,list&quot;)&#10;  public void configuration(@RequestBody final RequestVo data)&#10;  {&#10;  }&#10;}&#10;" description="Add service config function." toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="filterClass" value="import com.oyunstudyosu.eros.core.exceptions.RequestFilterException;&#10;import com.oyunstudyosu.eros.core.interfaces.IRequestFilter;&#10;import com.oyunstudyosu.eros.core.interfaces.IRequestInfo;&#10;import org.springframework.stereotype.Component;&#10;&#10;@Component&#10;public class $CLASS_NAME$ implements IRequestFilter&#10;{&#10;  @Override&#10;  public void execute(IRequestInfo model) throws RequestFilterException&#10;  {&#10;    $END$&#10;  }&#10;}" description="Create empty filter class." toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="processClass" value="import com.oyunstudyosu.eros.core.interfaces.IRequestProcess;&#10;import com.oyunstudyosu.eros.core.exceptions.ProcessException;&#10;import com.oyunstudyosu.eros.core.interfaces.IRequestInfo;&#10;import org.springframework.stereotype.Component;&#10;&#10;@Component&#10;public class $CLASS_NAME$ implements IRequestProcess&#10;{&#10;  public void execute(IRequestInfo model) throws ProcessException&#10;  {&#10;    $END$&#10;  }&#10;}&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getResData" value="$TYPE$ responseVo = model.getResponseData($TYPE$.class);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tfe" value="throw new RequestFilterException($CODE$, $MESSAGE$);" description="Throws filter exception" toReformat="false" toShortenFQNames="true">
    <variable name="CODE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tpe" value="throw new ProcessException($CODE$, $MESSAGE$);" description="Throws process exception." toReformat="false" toShortenFQNames="true">
    <variable name="CODE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getTimeMilliseconds" value="Calendar.getInstance().getTimeInMillis()" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="getPlayer" value="Player player = playerModel.getById(model.getUserId());" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="addServiceData" value="@ServiceMapping(name = &quot;$NAME$&quot;, typeList = {ServiceType.Web})&#10;  @ResponseData(type = $END$.class)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="initList" value="if (list == null)&#10;    { list = new ArrayList&lt;&gt;(); }" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="makeAdmin" value="@AddRequestFilter(type = AdminAccountFilter.class)&#10;  @AddRequestFilter(type = ServiceLevelFilter.class)" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="propMan" value="PropertyManager $NAME$ = new PropertyManager($END$);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="addPropertyFacade" value="@Autowired&#10;private PropertyFacade propertyFacade;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>